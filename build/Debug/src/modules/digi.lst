                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module digi
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _digitalWrite_PARM_2
                                     12 	.globl _CP_RL2
                                     13 	.globl _C_T2
                                     14 	.globl _TR2
                                     15 	.globl _EXEN2
                                     16 	.globl _TCLK
                                     17 	.globl _RCLK
                                     18 	.globl _EXF2
                                     19 	.globl _TF2
                                     20 	.globl _T2
                                     21 	.globl _T2EX
                                     22 	.globl _RI
                                     23 	.globl _TI
                                     24 	.globl _RB8
                                     25 	.globl _TB8
                                     26 	.globl _REN
                                     27 	.globl _SM2
                                     28 	.globl _SM1
                                     29 	.globl _SM0
                                     30 	.globl _RXD
                                     31 	.globl _TXD
                                     32 	.globl _INT0
                                     33 	.globl _INT1
                                     34 	.globl _T0
                                     35 	.globl _T1
                                     36 	.globl _WR
                                     37 	.globl _RD
                                     38 	.globl _PX0
                                     39 	.globl _PT0
                                     40 	.globl _PX1
                                     41 	.globl _PT1
                                     42 	.globl _PS
                                     43 	.globl _PT2
                                     44 	.globl _EX0
                                     45 	.globl _ET0
                                     46 	.globl _EX1
                                     47 	.globl _ET1
                                     48 	.globl _ES
                                     49 	.globl _ET2
                                     50 	.globl _EA
                                     51 	.globl _IT0
                                     52 	.globl _IE0
                                     53 	.globl _IT1
                                     54 	.globl _IE1
                                     55 	.globl _TR0
                                     56 	.globl _TF0
                                     57 	.globl _TR1
                                     58 	.globl _TF1
                                     59 	.globl _P
                                     60 	.globl _OV
                                     61 	.globl _RS0
                                     62 	.globl _RS1
                                     63 	.globl _F0
                                     64 	.globl _AC
                                     65 	.globl _CY
                                     66 	.globl _P37
                                     67 	.globl _P36
                                     68 	.globl _P35
                                     69 	.globl _P34
                                     70 	.globl _P33
                                     71 	.globl _P32
                                     72 	.globl _P31
                                     73 	.globl _P30
                                     74 	.globl _P27
                                     75 	.globl _P26
                                     76 	.globl _P25
                                     77 	.globl _P24
                                     78 	.globl _P23
                                     79 	.globl _P22
                                     80 	.globl _P21
                                     81 	.globl _P20
                                     82 	.globl _P17
                                     83 	.globl _P16
                                     84 	.globl _P15
                                     85 	.globl _P14
                                     86 	.globl _P13
                                     87 	.globl _P12
                                     88 	.globl _P11
                                     89 	.globl _P10
                                     90 	.globl _P07
                                     91 	.globl _P06
                                     92 	.globl _P05
                                     93 	.globl _P04
                                     94 	.globl _P03
                                     95 	.globl _P02
                                     96 	.globl _P01
                                     97 	.globl _P00
                                     98 	.globl _TH2
                                     99 	.globl _TL2
                                    100 	.globl _RCAP2H
                                    101 	.globl _RCAP2L
                                    102 	.globl _T2CON
                                    103 	.globl _SBUF
                                    104 	.globl _SCON
                                    105 	.globl _IP
                                    106 	.globl _IE
                                    107 	.globl _TH1
                                    108 	.globl _TH0
                                    109 	.globl _TL1
                                    110 	.globl _TL0
                                    111 	.globl _TMOD
                                    112 	.globl _TCON
                                    113 	.globl _PCON
                                    114 	.globl _DPH
                                    115 	.globl _DPL
                                    116 	.globl _SP
                                    117 	.globl _B
                                    118 	.globl _ACC
                                    119 	.globl _PSW
                                    120 	.globl _P3
                                    121 	.globl _P2
                                    122 	.globl _P1
                                    123 	.globl _P0
                                    124 	.globl _shiftOut_PARM_4
                                    125 	.globl _shiftOut_PARM_3
                                    126 	.globl _shiftOut_PARM_2
                                    127 	.globl _shiftIn_PARM_3
                                    128 	.globl _shiftIn_PARM_2
                                    129 	.globl _pinMode
                                    130 	.globl _digitalWrite
                                    131 	.globl _digitalRead
                                    132 	.globl _shiftIn
                                    133 	.globl _shiftOut
                                    134 ;--------------------------------------------------------
                                    135 ; special function registers
                                    136 ;--------------------------------------------------------
                                    137 	.area RSEG    (ABS,DATA)
      000000                        138 	.org 0x0000
                           000080   139 G$P0$0_0$0 == 0x0080
                           000080   140 _P0	=	0x0080
                           000090   141 G$P1$0_0$0 == 0x0090
                           000090   142 _P1	=	0x0090
                           0000A0   143 G$P2$0_0$0 == 0x00a0
                           0000A0   144 _P2	=	0x00a0
                           0000B0   145 G$P3$0_0$0 == 0x00b0
                           0000B0   146 _P3	=	0x00b0
                           0000D0   147 G$PSW$0_0$0 == 0x00d0
                           0000D0   148 _PSW	=	0x00d0
                           0000E0   149 G$ACC$0_0$0 == 0x00e0
                           0000E0   150 _ACC	=	0x00e0
                           0000F0   151 G$B$0_0$0 == 0x00f0
                           0000F0   152 _B	=	0x00f0
                           000081   153 G$SP$0_0$0 == 0x0081
                           000081   154 _SP	=	0x0081
                           000082   155 G$DPL$0_0$0 == 0x0082
                           000082   156 _DPL	=	0x0082
                           000083   157 G$DPH$0_0$0 == 0x0083
                           000083   158 _DPH	=	0x0083
                           000087   159 G$PCON$0_0$0 == 0x0087
                           000087   160 _PCON	=	0x0087
                           000088   161 G$TCON$0_0$0 == 0x0088
                           000088   162 _TCON	=	0x0088
                           000089   163 G$TMOD$0_0$0 == 0x0089
                           000089   164 _TMOD	=	0x0089
                           00008A   165 G$TL0$0_0$0 == 0x008a
                           00008A   166 _TL0	=	0x008a
                           00008B   167 G$TL1$0_0$0 == 0x008b
                           00008B   168 _TL1	=	0x008b
                           00008C   169 G$TH0$0_0$0 == 0x008c
                           00008C   170 _TH0	=	0x008c
                           00008D   171 G$TH1$0_0$0 == 0x008d
                           00008D   172 _TH1	=	0x008d
                           0000A8   173 G$IE$0_0$0 == 0x00a8
                           0000A8   174 _IE	=	0x00a8
                           0000B8   175 G$IP$0_0$0 == 0x00b8
                           0000B8   176 _IP	=	0x00b8
                           000098   177 G$SCON$0_0$0 == 0x0098
                           000098   178 _SCON	=	0x0098
                           000099   179 G$SBUF$0_0$0 == 0x0099
                           000099   180 _SBUF	=	0x0099
                           0000C8   181 G$T2CON$0_0$0 == 0x00c8
                           0000C8   182 _T2CON	=	0x00c8
                           0000CA   183 G$RCAP2L$0_0$0 == 0x00ca
                           0000CA   184 _RCAP2L	=	0x00ca
                           0000CB   185 G$RCAP2H$0_0$0 == 0x00cb
                           0000CB   186 _RCAP2H	=	0x00cb
                           0000CC   187 G$TL2$0_0$0 == 0x00cc
                           0000CC   188 _TL2	=	0x00cc
                           0000CD   189 G$TH2$0_0$0 == 0x00cd
                           0000CD   190 _TH2	=	0x00cd
                                    191 ;--------------------------------------------------------
                                    192 ; special function bits
                                    193 ;--------------------------------------------------------
                                    194 	.area RSEG    (ABS,DATA)
      000000                        195 	.org 0x0000
                           000080   196 G$P00$0_0$0 == 0x0080
                           000080   197 _P00	=	0x0080
                           000081   198 G$P01$0_0$0 == 0x0081
                           000081   199 _P01	=	0x0081
                           000082   200 G$P02$0_0$0 == 0x0082
                           000082   201 _P02	=	0x0082
                           000083   202 G$P03$0_0$0 == 0x0083
                           000083   203 _P03	=	0x0083
                           000084   204 G$P04$0_0$0 == 0x0084
                           000084   205 _P04	=	0x0084
                           000085   206 G$P05$0_0$0 == 0x0085
                           000085   207 _P05	=	0x0085
                           000086   208 G$P06$0_0$0 == 0x0086
                           000086   209 _P06	=	0x0086
                           000087   210 G$P07$0_0$0 == 0x0087
                           000087   211 _P07	=	0x0087
                           000090   212 G$P10$0_0$0 == 0x0090
                           000090   213 _P10	=	0x0090
                           000091   214 G$P11$0_0$0 == 0x0091
                           000091   215 _P11	=	0x0091
                           000092   216 G$P12$0_0$0 == 0x0092
                           000092   217 _P12	=	0x0092
                           000093   218 G$P13$0_0$0 == 0x0093
                           000093   219 _P13	=	0x0093
                           000094   220 G$P14$0_0$0 == 0x0094
                           000094   221 _P14	=	0x0094
                           000095   222 G$P15$0_0$0 == 0x0095
                           000095   223 _P15	=	0x0095
                           000096   224 G$P16$0_0$0 == 0x0096
                           000096   225 _P16	=	0x0096
                           000097   226 G$P17$0_0$0 == 0x0097
                           000097   227 _P17	=	0x0097
                           0000A0   228 G$P20$0_0$0 == 0x00a0
                           0000A0   229 _P20	=	0x00a0
                           0000A1   230 G$P21$0_0$0 == 0x00a1
                           0000A1   231 _P21	=	0x00a1
                           0000A2   232 G$P22$0_0$0 == 0x00a2
                           0000A2   233 _P22	=	0x00a2
                           0000A3   234 G$P23$0_0$0 == 0x00a3
                           0000A3   235 _P23	=	0x00a3
                           0000A4   236 G$P24$0_0$0 == 0x00a4
                           0000A4   237 _P24	=	0x00a4
                           0000A5   238 G$P25$0_0$0 == 0x00a5
                           0000A5   239 _P25	=	0x00a5
                           0000A6   240 G$P26$0_0$0 == 0x00a6
                           0000A6   241 _P26	=	0x00a6
                           0000A7   242 G$P27$0_0$0 == 0x00a7
                           0000A7   243 _P27	=	0x00a7
                           0000B0   244 G$P30$0_0$0 == 0x00b0
                           0000B0   245 _P30	=	0x00b0
                           0000B1   246 G$P31$0_0$0 == 0x00b1
                           0000B1   247 _P31	=	0x00b1
                           0000B2   248 G$P32$0_0$0 == 0x00b2
                           0000B2   249 _P32	=	0x00b2
                           0000B3   250 G$P33$0_0$0 == 0x00b3
                           0000B3   251 _P33	=	0x00b3
                           0000B4   252 G$P34$0_0$0 == 0x00b4
                           0000B4   253 _P34	=	0x00b4
                           0000B5   254 G$P35$0_0$0 == 0x00b5
                           0000B5   255 _P35	=	0x00b5
                           0000B6   256 G$P36$0_0$0 == 0x00b6
                           0000B6   257 _P36	=	0x00b6
                           0000B7   258 G$P37$0_0$0 == 0x00b7
                           0000B7   259 _P37	=	0x00b7
                           0000D7   260 G$CY$0_0$0 == 0x00d7
                           0000D7   261 _CY	=	0x00d7
                           0000D6   262 G$AC$0_0$0 == 0x00d6
                           0000D6   263 _AC	=	0x00d6
                           0000D5   264 G$F0$0_0$0 == 0x00d5
                           0000D5   265 _F0	=	0x00d5
                           0000D4   266 G$RS1$0_0$0 == 0x00d4
                           0000D4   267 _RS1	=	0x00d4
                           0000D3   268 G$RS0$0_0$0 == 0x00d3
                           0000D3   269 _RS0	=	0x00d3
                           0000D2   270 G$OV$0_0$0 == 0x00d2
                           0000D2   271 _OV	=	0x00d2
                           0000D0   272 G$P$0_0$0 == 0x00d0
                           0000D0   273 _P	=	0x00d0
                           00008F   274 G$TF1$0_0$0 == 0x008f
                           00008F   275 _TF1	=	0x008f
                           00008E   276 G$TR1$0_0$0 == 0x008e
                           00008E   277 _TR1	=	0x008e
                           00008D   278 G$TF0$0_0$0 == 0x008d
                           00008D   279 _TF0	=	0x008d
                           00008C   280 G$TR0$0_0$0 == 0x008c
                           00008C   281 _TR0	=	0x008c
                           00008B   282 G$IE1$0_0$0 == 0x008b
                           00008B   283 _IE1	=	0x008b
                           00008A   284 G$IT1$0_0$0 == 0x008a
                           00008A   285 _IT1	=	0x008a
                           000089   286 G$IE0$0_0$0 == 0x0089
                           000089   287 _IE0	=	0x0089
                           000088   288 G$IT0$0_0$0 == 0x0088
                           000088   289 _IT0	=	0x0088
                           0000AF   290 G$EA$0_0$0 == 0x00af
                           0000AF   291 _EA	=	0x00af
                           0000AD   292 G$ET2$0_0$0 == 0x00ad
                           0000AD   293 _ET2	=	0x00ad
                           0000AC   294 G$ES$0_0$0 == 0x00ac
                           0000AC   295 _ES	=	0x00ac
                           0000AB   296 G$ET1$0_0$0 == 0x00ab
                           0000AB   297 _ET1	=	0x00ab
                           0000AA   298 G$EX1$0_0$0 == 0x00aa
                           0000AA   299 _EX1	=	0x00aa
                           0000A9   300 G$ET0$0_0$0 == 0x00a9
                           0000A9   301 _ET0	=	0x00a9
                           0000A8   302 G$EX0$0_0$0 == 0x00a8
                           0000A8   303 _EX0	=	0x00a8
                           0000BD   304 G$PT2$0_0$0 == 0x00bd
                           0000BD   305 _PT2	=	0x00bd
                           0000BC   306 G$PS$0_0$0 == 0x00bc
                           0000BC   307 _PS	=	0x00bc
                           0000BB   308 G$PT1$0_0$0 == 0x00bb
                           0000BB   309 _PT1	=	0x00bb
                           0000BA   310 G$PX1$0_0$0 == 0x00ba
                           0000BA   311 _PX1	=	0x00ba
                           0000B9   312 G$PT0$0_0$0 == 0x00b9
                           0000B9   313 _PT0	=	0x00b9
                           0000B8   314 G$PX0$0_0$0 == 0x00b8
                           0000B8   315 _PX0	=	0x00b8
                           0000B7   316 G$RD$0_0$0 == 0x00b7
                           0000B7   317 _RD	=	0x00b7
                           0000B6   318 G$WR$0_0$0 == 0x00b6
                           0000B6   319 _WR	=	0x00b6
                           0000B5   320 G$T1$0_0$0 == 0x00b5
                           0000B5   321 _T1	=	0x00b5
                           0000B4   322 G$T0$0_0$0 == 0x00b4
                           0000B4   323 _T0	=	0x00b4
                           0000B3   324 G$INT1$0_0$0 == 0x00b3
                           0000B3   325 _INT1	=	0x00b3
                           0000B2   326 G$INT0$0_0$0 == 0x00b2
                           0000B2   327 _INT0	=	0x00b2
                           0000B1   328 G$TXD$0_0$0 == 0x00b1
                           0000B1   329 _TXD	=	0x00b1
                           0000B0   330 G$RXD$0_0$0 == 0x00b0
                           0000B0   331 _RXD	=	0x00b0
                           00009F   332 G$SM0$0_0$0 == 0x009f
                           00009F   333 _SM0	=	0x009f
                           00009E   334 G$SM1$0_0$0 == 0x009e
                           00009E   335 _SM1	=	0x009e
                           00009D   336 G$SM2$0_0$0 == 0x009d
                           00009D   337 _SM2	=	0x009d
                           00009C   338 G$REN$0_0$0 == 0x009c
                           00009C   339 _REN	=	0x009c
                           00009B   340 G$TB8$0_0$0 == 0x009b
                           00009B   341 _TB8	=	0x009b
                           00009A   342 G$RB8$0_0$0 == 0x009a
                           00009A   343 _RB8	=	0x009a
                           000099   344 G$TI$0_0$0 == 0x0099
                           000099   345 _TI	=	0x0099
                           000098   346 G$RI$0_0$0 == 0x0098
                           000098   347 _RI	=	0x0098
                           000091   348 G$T2EX$0_0$0 == 0x0091
                           000091   349 _T2EX	=	0x0091
                           000090   350 G$T2$0_0$0 == 0x0090
                           000090   351 _T2	=	0x0090
                           0000CF   352 G$TF2$0_0$0 == 0x00cf
                           0000CF   353 _TF2	=	0x00cf
                           0000CE   354 G$EXF2$0_0$0 == 0x00ce
                           0000CE   355 _EXF2	=	0x00ce
                           0000CD   356 G$RCLK$0_0$0 == 0x00cd
                           0000CD   357 _RCLK	=	0x00cd
                           0000CC   358 G$TCLK$0_0$0 == 0x00cc
                           0000CC   359 _TCLK	=	0x00cc
                           0000CB   360 G$EXEN2$0_0$0 == 0x00cb
                           0000CB   361 _EXEN2	=	0x00cb
                           0000CA   362 G$TR2$0_0$0 == 0x00ca
                           0000CA   363 _TR2	=	0x00ca
                           0000C9   364 G$C_T2$0_0$0 == 0x00c9
                           0000C9   365 _C_T2	=	0x00c9
                           0000C8   366 G$CP_RL2$0_0$0 == 0x00c8
                           0000C8   367 _CP_RL2	=	0x00c8
                                    368 ;--------------------------------------------------------
                                    369 ; overlayable register banks
                                    370 ;--------------------------------------------------------
                                    371 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        372 	.ds 8
                                    373 ;--------------------------------------------------------
                                    374 ; internal ram data
                                    375 ;--------------------------------------------------------
                                    376 	.area DSEG    (DATA)
                           000000   377 Ldigi.digitalWrite$value$1_0$13==.
      000000                        378 _digitalWrite_value_65536_13:
      000000                        379 	.ds 1
                           000001   380 Ldigi.digitalRead$value$1_0$25==.
      000001                        381 _digitalRead_value_65536_25:
      000001                        382 	.ds 1
                           000002   383 Ldigi.shiftIn$clockPin$1_0$30==.
      000002                        384 _shiftIn_PARM_2:
      000002                        385 	.ds 3
                           000005   386 Ldigi.shiftIn$bitOrder$1_0$30==.
      000005                        387 _shiftIn_PARM_3:
      000005                        388 	.ds 1
                           000006   389 Ldigi.shiftOut$clockPin$1_0$36==.
      000006                        390 _shiftOut_PARM_2:
      000006                        391 	.ds 3
                           000009   392 Ldigi.shiftOut$bitOrder$1_0$36==.
      000009                        393 _shiftOut_PARM_3:
      000009                        394 	.ds 1
                           00000A   395 Ldigi.shiftOut$val$1_0$36==.
      00000A                        396 _shiftOut_PARM_4:
      00000A                        397 	.ds 1
                                    398 ;--------------------------------------------------------
                                    399 ; overlayable items in internal ram 
                                    400 ;--------------------------------------------------------
                                    401 	.area	OSEG    (OVR,DATA)
                           000000   402 Ldigi.digitalWrite$level$1_0$12==.
      000000                        403 _digitalWrite_PARM_2:
      000000                        404 	.ds 1
                                    405 	.area	OSEG    (OVR,DATA)
                                    406 ;--------------------------------------------------------
                                    407 ; indirectly addressable internal ram data
                                    408 ;--------------------------------------------------------
                                    409 	.area ISEG    (DATA)
                                    410 ;--------------------------------------------------------
                                    411 ; absolute internal ram data
                                    412 ;--------------------------------------------------------
                                    413 	.area IABS    (ABS,DATA)
                                    414 	.area IABS    (ABS,DATA)
                                    415 ;--------------------------------------------------------
                                    416 ; bit data
                                    417 ;--------------------------------------------------------
                                    418 	.area BSEG    (BIT)
                           000000   419 Ldigi.shiftOut$sloc0$0_1$0==.
      000000                        420 _shiftOut_sloc0_1_0:
      000000                        421 	.ds 1
                                    422 ;--------------------------------------------------------
                                    423 ; paged external ram data
                                    424 ;--------------------------------------------------------
                                    425 	.area PSEG    (PAG,XDATA)
                                    426 ;--------------------------------------------------------
                                    427 ; external ram data
                                    428 ;--------------------------------------------------------
                                    429 	.area XSEG    (XDATA)
                                    430 ;--------------------------------------------------------
                                    431 ; absolute external ram data
                                    432 ;--------------------------------------------------------
                                    433 	.area XABS    (ABS,XDATA)
                                    434 ;--------------------------------------------------------
                                    435 ; external initialized ram data
                                    436 ;--------------------------------------------------------
                                    437 	.area XISEG   (XDATA)
                                    438 	.area HOME    (CODE)
                                    439 	.area GSINIT0 (CODE)
                                    440 	.area GSINIT1 (CODE)
                                    441 	.area GSINIT2 (CODE)
                                    442 	.area GSINIT3 (CODE)
                                    443 	.area GSINIT4 (CODE)
                                    444 	.area GSINIT5 (CODE)
                                    445 	.area GSINIT  (CODE)
                                    446 	.area GSFINAL (CODE)
                                    447 	.area CSEG    (CODE)
                                    448 ;--------------------------------------------------------
                                    449 ; global & static initialisations
                                    450 ;--------------------------------------------------------
                                    451 	.area HOME    (CODE)
                                    452 	.area GSINIT  (CODE)
                                    453 	.area GSFINAL (CODE)
                                    454 	.area GSINIT  (CODE)
                                    455 ;--------------------------------------------------------
                                    456 ; Home
                                    457 ;--------------------------------------------------------
                                    458 	.area HOME    (CODE)
                                    459 	.area HOME    (CODE)
                                    460 ;--------------------------------------------------------
                                    461 ; code
                                    462 ;--------------------------------------------------------
                                    463 	.area CSEG    (CODE)
                                    464 ;------------------------------------------------------------
                                    465 ;Allocation info for local variables in function 'pinMode'
                                    466 ;------------------------------------------------------------
                           000000   467 	G$pinMode$0$0 ==.
                           000000   468 	C$digi.c$4$0_0$11 ==.
                                    469 ;	./src/modules/digi.c:4: void pinMode(void) {
                                    470 ;	-----------------------------------------
                                    471 ;	 function pinMode
                                    472 ;	-----------------------------------------
      000000                        473 _pinMode:
                           000007   474 	ar7 = 0x07
                           000006   475 	ar6 = 0x06
                           000005   476 	ar5 = 0x05
                           000004   477 	ar4 = 0x04
                           000003   478 	ar3 = 0x03
                           000002   479 	ar2 = 0x02
                           000001   480 	ar1 = 0x01
                           000000   481 	ar0 = 0x00
                           000000   482 	C$digi.c$7$0_0$11 ==.
                                    483 ;	./src/modules/digi.c:7: }
                           000000   484 	C$digi.c$7$0_0$11 ==.
                           000000   485 	XG$pinMode$0$0 ==.
      000000 22               [24]  486 	ret
                                    487 ;------------------------------------------------------------
                                    488 ;Allocation info for local variables in function 'digitalWrite'
                                    489 ;------------------------------------------------------------
                                    490 ;value                     Allocated with name '_digitalWrite_value_65536_13'
                                    491 ;level                     Allocated with name '_digitalWrite_PARM_2'
                                    492 ;_pin                      Allocated to registers r5 r6 r7 
                                    493 ;------------------------------------------------------------
                           000001   494 	G$digitalWrite$0$0 ==.
                           000001   495 	C$digi.c$10$0_0$13 ==.
                                    496 ;	./src/modules/digi.c:10: void digitalWrite(uint8_t* _pin, uint8_t level) {
                                    497 ;	-----------------------------------------
                                    498 ;	 function digitalWrite
                                    499 ;	-----------------------------------------
      000001                        500 _digitalWrite:
                           000001   501 	C$digi.c$17$1_0$13 ==.
                                    502 ;	./src/modules/digi.c:17: MACRO_LOOP(PORTS)
      000001 AD 82            [24]  503 	mov	r5,dpl
      000003 AE 83            [24]  504 	mov	r6,dph
      000005 AF F0            [24]  505 	mov	r7,b
      000007 12r00r00         [24]  506 	lcall	__gptrget
      00000A 70 03            [24]  507 	jnz	00102$
      00000C 85 80*00         [24]  508 	mov	_digitalWrite_value_65536_13,_P0
      00000F                        509 00102$:
      00000F 8D 82            [24]  510 	mov	dpl,r5
      000011 8E 83            [24]  511 	mov	dph,r6
      000013 8F F0            [24]  512 	mov	b,r7
      000015 12r00r00         [24]  513 	lcall	__gptrget
      000018 FC               [12]  514 	mov	r4,a
      000019 BC 01 03         [24]  515 	cjne	r4,#0x01,00104$
      00001C 85 90*00         [24]  516 	mov	_digitalWrite_value_65536_13,_P1
      00001F                        517 00104$:
      00001F 8D 82            [24]  518 	mov	dpl,r5
      000021 8E 83            [24]  519 	mov	dph,r6
      000023 8F F0            [24]  520 	mov	b,r7
      000025 12r00r00         [24]  521 	lcall	__gptrget
      000028 FC               [12]  522 	mov	r4,a
      000029 BC 02 03         [24]  523 	cjne	r4,#0x02,00106$
      00002C 85 A0*00         [24]  524 	mov	_digitalWrite_value_65536_13,_P2
      00002F                        525 00106$:
      00002F 8D 82            [24]  526 	mov	dpl,r5
      000031 8E 83            [24]  527 	mov	dph,r6
      000033 8F F0            [24]  528 	mov	b,r7
      000035 12r00r00         [24]  529 	lcall	__gptrget
      000038 FC               [12]  530 	mov	r4,a
      000039 BC 03 03         [24]  531 	cjne	r4,#0x03,00108$
      00003C 85 B0*00         [24]  532 	mov	_digitalWrite_value_65536_13,_P3
      00003F                        533 00108$:
                           00003F   534 	C$digi.c$19$1_0$13 ==.
                                    535 ;	./src/modules/digi.c:19: if (level) {
      00003F E5*00            [12]  536 	mov	a,_digitalWrite_PARM_2
      000041 60 25            [24]  537 	jz	00110$
                           000043   538 	C$digi.c$20$2_0$18 ==.
                                    539 ;	./src/modules/digi.c:20: value |= 1 << _pin[1];
      000043 74 01            [12]  540 	mov	a,#0x01
      000045 2D               [12]  541 	add	a,r5
      000046 FA               [12]  542 	mov	r2,a
      000047 E4               [12]  543 	clr	a
      000048 3E               [12]  544 	addc	a,r6
      000049 FB               [12]  545 	mov	r3,a
      00004A 8F 04            [24]  546 	mov	ar4,r7
      00004C 8A 82            [24]  547 	mov	dpl,r2
      00004E 8B 83            [24]  548 	mov	dph,r3
      000050 8C F0            [24]  549 	mov	b,r4
      000052 12r00r00         [24]  550 	lcall	__gptrget
      000055 FA               [12]  551 	mov	r2,a
      000056 8A F0            [24]  552 	mov	b,r2
      000058 05 F0            [12]  553 	inc	b
      00005A 74 01            [12]  554 	mov	a,#0x01
      00005C 80 02            [24]  555 	sjmp	00168$
      00005E                        556 00166$:
      00005E 25 E0            [12]  557 	add	a,acc
      000060                        558 00168$:
      000060 D5 F0 FB         [24]  559 	djnz	b,00166$
      000063 FA               [12]  560 	mov	r2,a
      000064 42*00            [12]  561 	orl	_digitalWrite_value_65536_13,a
      000066 80 24            [24]  562 	sjmp	00111$
      000068                        563 00110$:
                           000068   564 	C$digi.c$22$2_0$19 ==.
                                    565 ;	./src/modules/digi.c:22: value &= ~(1 << _pin[1]);
      000068 74 01            [12]  566 	mov	a,#0x01
      00006A 2D               [12]  567 	add	a,r5
      00006B FA               [12]  568 	mov	r2,a
      00006C E4               [12]  569 	clr	a
      00006D 3E               [12]  570 	addc	a,r6
      00006E FB               [12]  571 	mov	r3,a
      00006F 8F 04            [24]  572 	mov	ar4,r7
      000071 8A 82            [24]  573 	mov	dpl,r2
      000073 8B 83            [24]  574 	mov	dph,r3
      000075 8C F0            [24]  575 	mov	b,r4
      000077 12r00r00         [24]  576 	lcall	__gptrget
      00007A FA               [12]  577 	mov	r2,a
      00007B 8A F0            [24]  578 	mov	b,r2
      00007D 05 F0            [12]  579 	inc	b
      00007F 74 01            [12]  580 	mov	a,#0x01
      000081 80 02            [24]  581 	sjmp	00171$
      000083                        582 00169$:
      000083 25 E0            [12]  583 	add	a,acc
      000085                        584 00171$:
      000085 D5 F0 FB         [24]  585 	djnz	b,00169$
      000088 F4               [12]  586 	cpl	a
      000089 FA               [12]  587 	mov	r2,a
      00008A 52*00            [12]  588 	anl	_digitalWrite_value_65536_13,a
      00008C                        589 00111$:
                           00008C   590 	C$digi.c$29$1_0$13 ==.
                                    591 ;	./src/modules/digi.c:29: MACRO_LOOP(PORTS)
      00008C 8D 82            [24]  592 	mov	dpl,r5
      00008E 8E 83            [24]  593 	mov	dph,r6
      000090 8F F0            [24]  594 	mov	b,r7
      000092 12r00r00         [24]  595 	lcall	__gptrget
      000095 70 03            [24]  596 	jnz	00113$
      000097 85*00 80         [24]  597 	mov	_P0,_digitalWrite_value_65536_13
      00009A                        598 00113$:
      00009A 8D 82            [24]  599 	mov	dpl,r5
      00009C 8E 83            [24]  600 	mov	dph,r6
      00009E 8F F0            [24]  601 	mov	b,r7
      0000A0 12r00r00         [24]  602 	lcall	__gptrget
      0000A3 FC               [12]  603 	mov	r4,a
      0000A4 BC 01 03         [24]  604 	cjne	r4,#0x01,00115$
      0000A7 85*00 90         [24]  605 	mov	_P1,_digitalWrite_value_65536_13
      0000AA                        606 00115$:
      0000AA 8D 82            [24]  607 	mov	dpl,r5
      0000AC 8E 83            [24]  608 	mov	dph,r6
      0000AE 8F F0            [24]  609 	mov	b,r7
      0000B0 12r00r00         [24]  610 	lcall	__gptrget
      0000B3 FC               [12]  611 	mov	r4,a
      0000B4 BC 02 03         [24]  612 	cjne	r4,#0x02,00117$
      0000B7 85*00 A0         [24]  613 	mov	_P2,_digitalWrite_value_65536_13
      0000BA                        614 00117$:
      0000BA 8D 82            [24]  615 	mov	dpl,r5
      0000BC 8E 83            [24]  616 	mov	dph,r6
      0000BE 8F F0            [24]  617 	mov	b,r7
      0000C0 12r00r00         [24]  618 	lcall	__gptrget
      0000C3 FD               [12]  619 	mov	r5,a
      0000C4 BD 03 03         [24]  620 	cjne	r5,#0x03,00120$
      0000C7 85*00 B0         [24]  621 	mov	_P3,_digitalWrite_value_65536_13
      0000CA                        622 00120$:
                           0000CA   623 	C$digi.c$31$1_0$13 ==.
                                    624 ;	./src/modules/digi.c:31: }
                           0000CA   625 	C$digi.c$31$1_0$13 ==.
                           0000CA   626 	XG$digitalWrite$0$0 ==.
      0000CA 22               [24]  627 	ret
                                    628 ;------------------------------------------------------------
                                    629 ;Allocation info for local variables in function 'digitalRead'
                                    630 ;------------------------------------------------------------
                                    631 ;value                     Allocated with name '_digitalRead_value_65536_25'
                                    632 ;_pin                      Allocated to registers r5 r6 r7 
                                    633 ;------------------------------------------------------------
                           0000CB   634 	G$digitalRead$0$0 ==.
                           0000CB   635 	C$digi.c$34$1_0$25 ==.
                                    636 ;	./src/modules/digi.c:34: uint8_t digitalRead(uint8_t* _pin) {
                                    637 ;	-----------------------------------------
                                    638 ;	 function digitalRead
                                    639 ;	-----------------------------------------
      0000CB                        640 _digitalRead:
                           0000CB   641 	C$digi.c$41$1_0$25 ==.
                                    642 ;	./src/modules/digi.c:41: MACRO_LOOP(PORTS)
      0000CB AD 82            [24]  643 	mov	r5,dpl
      0000CD AE 83            [24]  644 	mov	r6,dph
      0000CF AF F0            [24]  645 	mov	r7,b
      0000D1 12r00r00         [24]  646 	lcall	__gptrget
      0000D4 70 03            [24]  647 	jnz	00102$
      0000D6 85 80*01         [24]  648 	mov	_digitalRead_value_65536_25,_P0
      0000D9                        649 00102$:
      0000D9 8D 82            [24]  650 	mov	dpl,r5
      0000DB 8E 83            [24]  651 	mov	dph,r6
      0000DD 8F F0            [24]  652 	mov	b,r7
      0000DF 12r00r00         [24]  653 	lcall	__gptrget
      0000E2 FC               [12]  654 	mov	r4,a
      0000E3 BC 01 03         [24]  655 	cjne	r4,#0x01,00104$
      0000E6 85 90*01         [24]  656 	mov	_digitalRead_value_65536_25,_P1
      0000E9                        657 00104$:
      0000E9 8D 82            [24]  658 	mov	dpl,r5
      0000EB 8E 83            [24]  659 	mov	dph,r6
      0000ED 8F F0            [24]  660 	mov	b,r7
      0000EF 12r00r00         [24]  661 	lcall	__gptrget
      0000F2 FC               [12]  662 	mov	r4,a
      0000F3 BC 02 03         [24]  663 	cjne	r4,#0x02,00106$
      0000F6 85 A0*01         [24]  664 	mov	_digitalRead_value_65536_25,_P2
      0000F9                        665 00106$:
      0000F9 8D 82            [24]  666 	mov	dpl,r5
      0000FB 8E 83            [24]  667 	mov	dph,r6
      0000FD 8F F0            [24]  668 	mov	b,r7
      0000FF 12r00r00         [24]  669 	lcall	__gptrget
      000102 FC               [12]  670 	mov	r4,a
      000103 BC 03 03         [24]  671 	cjne	r4,#0x03,00108$
      000106 85 B0*01         [24]  672 	mov	_digitalRead_value_65536_25,_P3
      000109                        673 00108$:
                           000109   674 	C$digi.c$43$1_0$25 ==.
                                    675 ;	./src/modules/digi.c:43: return (value >> _pin[1]) & 1;
      000109 0D               [12]  676 	inc	r5
      00010A BD 00 01         [24]  677 	cjne	r5,#0x00,00134$
      00010D 0E               [12]  678 	inc	r6
      00010E                        679 00134$:
      00010E 8D 82            [24]  680 	mov	dpl,r5
      000110 8E 83            [24]  681 	mov	dph,r6
      000112 8F F0            [24]  682 	mov	b,r7
      000114 12r00r00         [24]  683 	lcall	__gptrget
      000117 FD               [12]  684 	mov	r5,a
      000118 8D F0            [24]  685 	mov	b,r5
      00011A 05 F0            [12]  686 	inc	b
      00011C E5*01            [12]  687 	mov	a,_digitalRead_value_65536_25
      00011E 80 02            [24]  688 	sjmp	00136$
      000120                        689 00135$:
      000120 C3               [12]  690 	clr	c
      000121 13               [12]  691 	rrc	a
      000122                        692 00136$:
      000122 D5 F0 FB         [24]  693 	djnz	b,00135$
      000125 54 01            [12]  694 	anl	a,#0x01
      000127 F5 82            [12]  695 	mov	dpl,a
                           000129   696 	C$digi.c$44$1_0$25 ==.
                                    697 ;	./src/modules/digi.c:44: }
                           000129   698 	C$digi.c$44$1_0$25 ==.
                           000129   699 	XG$digitalRead$0$0 ==.
      000129 22               [24]  700 	ret
                                    701 ;------------------------------------------------------------
                                    702 ;Allocation info for local variables in function 'shiftIn'
                                    703 ;------------------------------------------------------------
                                    704 ;clockPin                  Allocated with name '_shiftIn_PARM_2'
                                    705 ;bitOrder                  Allocated with name '_shiftIn_PARM_3'
                                    706 ;dataPin                   Allocated to registers r5 r6 r7 
                                    707 ;value                     Allocated to registers r4 
                                    708 ;i                         Allocated to registers r3 
                                    709 ;------------------------------------------------------------
                           00012A   710 	G$shiftIn$0$0 ==.
                           00012A   711 	C$digi.c$47$1_0$31 ==.
                                    712 ;	./src/modules/digi.c:47: uint8_t shiftIn(uint8_t* dataPin, uint8_t* clockPin, uint8_t bitOrder) {
                                    713 ;	-----------------------------------------
                                    714 ;	 function shiftIn
                                    715 ;	-----------------------------------------
      00012A                        716 _shiftIn:
      00012A AD 82            [24]  717 	mov	r5,dpl
      00012C AE 83            [24]  718 	mov	r6,dph
      00012E AF F0            [24]  719 	mov	r7,b
                           000130   720 	C$digi.c$48$2_0$31 ==.
                                    721 ;	./src/modules/digi.c:48: uint8_t value = 0;
      000130 7C 00            [12]  722 	mov	r4,#0x00
                           000132   723 	C$digi.c$49$1_0$31 ==.
                                    724 ;	./src/modules/digi.c:49: for (uint8_t i = 0; i < 8; ++i) {
      000132 7B 00            [12]  725 	mov	r3,#0x00
      000134                        726 00106$:
      000134 BB 08 00         [24]  727 	cjne	r3,#0x08,00123$
      000137                        728 00123$:
      000137 40 03            [24]  729 	jc	00124$
      000139 02r01rEE         [24]  730 	ljmp	00104$
      00013C                        731 00124$:
                           00013C   732 	C$digi.c$50$3_0$33 ==.
                                    733 ;	./src/modules/digi.c:50: digitalWrite(clockPin, HIGH);
      00013C 75*00 01         [24]  734 	mov	_digitalWrite_PARM_2,#0x01
      00013F 85*02 82         [24]  735 	mov	dpl,_shiftIn_PARM_2
      000142 85*03 83         [24]  736 	mov	dph,(_shiftIn_PARM_2 + 1)
      000145 85*04 F0         [24]  737 	mov	b,(_shiftIn_PARM_2 + 2)
      000148 C0 07            [24]  738 	push	ar7
      00014A C0 06            [24]  739 	push	ar6
      00014C C0 05            [24]  740 	push	ar5
      00014E C0 04            [24]  741 	push	ar4
      000150 C0 03            [24]  742 	push	ar3
      000152 12r00r01         [24]  743 	lcall	_digitalWrite
      000155 D0 03            [24]  744 	pop	ar3
      000157 D0 04            [24]  745 	pop	ar4
      000159 D0 05            [24]  746 	pop	ar5
      00015B D0 06            [24]  747 	pop	ar6
      00015D D0 07            [24]  748 	pop	ar7
                           00015F   749 	C$digi.c$51$3_0$33 ==.
                                    750 ;	./src/modules/digi.c:51: if (bitOrder == LSBFIRST) {
      00015F E5*05            [12]  751 	mov	a,_shiftIn_PARM_3
      000161 70 2F            [24]  752 	jnz	00102$
                           000163   753 	C$digi.c$52$4_0$34 ==.
                                    754 ;	./src/modules/digi.c:52: value |= digitalRead(dataPin) << i;
      000163 8D 82            [24]  755 	mov	dpl,r5
      000165 8E 83            [24]  756 	mov	dph,r6
      000167 8F F0            [24]  757 	mov	b,r7
      000169 C0 07            [24]  758 	push	ar7
      00016B C0 06            [24]  759 	push	ar6
      00016D C0 05            [24]  760 	push	ar5
      00016F C0 04            [24]  761 	push	ar4
      000171 C0 03            [24]  762 	push	ar3
      000173 12r00rCB         [24]  763 	lcall	_digitalRead
      000176 E5 82            [12]  764 	mov	a,dpl
      000178 D0 03            [24]  765 	pop	ar3
      00017A D0 04            [24]  766 	pop	ar4
      00017C D0 05            [24]  767 	pop	ar5
      00017E D0 06            [24]  768 	pop	ar6
      000180 D0 07            [24]  769 	pop	ar7
      000182 8B F0            [24]  770 	mov	b,r3
      000184 05 F0            [12]  771 	inc	b
      000186 80 02            [24]  772 	sjmp	00128$
      000188                        773 00126$:
      000188 25 E0            [12]  774 	add	a,acc
      00018A                        775 00128$:
      00018A D5 F0 FB         [24]  776 	djnz	b,00126$
      00018D FA               [12]  777 	mov	r2,a
      00018E 42 04            [12]  778 	orl	ar4,a
      000190 80 35            [24]  779 	sjmp	00103$
      000192                        780 00102$:
                           000192   781 	C$digi.c$54$4_0$35 ==.
                                    782 ;	./src/modules/digi.c:54: value |= digitalRead(dataPin) << (7 - i);
      000192 8D 82            [24]  783 	mov	dpl,r5
      000194 8E 83            [24]  784 	mov	dph,r6
      000196 8F F0            [24]  785 	mov	b,r7
      000198 C0 07            [24]  786 	push	ar7
      00019A C0 06            [24]  787 	push	ar6
      00019C C0 05            [24]  788 	push	ar5
      00019E C0 04            [24]  789 	push	ar4
      0001A0 C0 03            [24]  790 	push	ar3
      0001A2 12r00rCB         [24]  791 	lcall	_digitalRead
      0001A5 AA 82            [24]  792 	mov	r2,dpl
      0001A7 D0 03            [24]  793 	pop	ar3
      0001A9 D0 04            [24]  794 	pop	ar4
      0001AB D0 05            [24]  795 	pop	ar5
      0001AD D0 06            [24]  796 	pop	ar6
      0001AF D0 07            [24]  797 	pop	ar7
      0001B1 8B 01            [24]  798 	mov	ar1,r3
      0001B3 74 07            [12]  799 	mov	a,#0x07
      0001B5 C3               [12]  800 	clr	c
      0001B6 99               [12]  801 	subb	a,r1
      0001B7 F9               [12]  802 	mov	r1,a
      0001B8 89 F0            [24]  803 	mov	b,r1
      0001BA 05 F0            [12]  804 	inc	b
      0001BC EA               [12]  805 	mov	a,r2
      0001BD 80 02            [24]  806 	sjmp	00131$
      0001BF                        807 00129$:
      0001BF 25 E0            [12]  808 	add	a,acc
      0001C1                        809 00131$:
      0001C1 D5 F0 FB         [24]  810 	djnz	b,00129$
      0001C4 F9               [12]  811 	mov	r1,a
      0001C5 42 04            [12]  812 	orl	ar4,a
      0001C7                        813 00103$:
                           0001C7   814 	C$digi.c$56$3_0$33 ==.
                                    815 ;	./src/modules/digi.c:56: digitalWrite(clockPin, LOW);
      0001C7 75*00 00         [24]  816 	mov	_digitalWrite_PARM_2,#0x00
      0001CA 85*02 82         [24]  817 	mov	dpl,_shiftIn_PARM_2
      0001CD 85*03 83         [24]  818 	mov	dph,(_shiftIn_PARM_2 + 1)
      0001D0 85*04 F0         [24]  819 	mov	b,(_shiftIn_PARM_2 + 2)
      0001D3 C0 07            [24]  820 	push	ar7
      0001D5 C0 06            [24]  821 	push	ar6
      0001D7 C0 05            [24]  822 	push	ar5
      0001D9 C0 04            [24]  823 	push	ar4
      0001DB C0 03            [24]  824 	push	ar3
      0001DD 12r00r01         [24]  825 	lcall	_digitalWrite
      0001E0 D0 03            [24]  826 	pop	ar3
      0001E2 D0 04            [24]  827 	pop	ar4
      0001E4 D0 05            [24]  828 	pop	ar5
      0001E6 D0 06            [24]  829 	pop	ar6
      0001E8 D0 07            [24]  830 	pop	ar7
                           0001EA   831 	C$digi.c$49$2_0$32 ==.
                                    832 ;	./src/modules/digi.c:49: for (uint8_t i = 0; i < 8; ++i) {
      0001EA 0B               [12]  833 	inc	r3
      0001EB 02r01r34         [24]  834 	ljmp	00106$
      0001EE                        835 00104$:
                           0001EE   836 	C$digi.c$58$1_0$31 ==.
                                    837 ;	./src/modules/digi.c:58: return value;
      0001EE 8C 82            [24]  838 	mov	dpl,r4
                           0001F0   839 	C$digi.c$59$1_0$31 ==.
                                    840 ;	./src/modules/digi.c:59: }
                           0001F0   841 	C$digi.c$59$1_0$31 ==.
                           0001F0   842 	XG$shiftIn$0$0 ==.
      0001F0 22               [24]  843 	ret
                                    844 ;------------------------------------------------------------
                                    845 ;Allocation info for local variables in function 'shiftOut'
                                    846 ;------------------------------------------------------------
                                    847 ;clockPin                  Allocated with name '_shiftOut_PARM_2'
                                    848 ;bitOrder                  Allocated with name '_shiftOut_PARM_3'
                                    849 ;val                       Allocated with name '_shiftOut_PARM_4'
                                    850 ;dataPin                   Allocated to registers r5 r6 r7 
                                    851 ;i                         Allocated to registers r4 
                                    852 ;------------------------------------------------------------
                           0001F1   853 	G$shiftOut$0$0 ==.
                           0001F1   854 	C$digi.c$62$1_0$38 ==.
                                    855 ;	./src/modules/digi.c:62: void shiftOut(uint8_t* dataPin,
                                    856 ;	-----------------------------------------
                                    857 ;	 function shiftOut
                                    858 ;	-----------------------------------------
      0001F1                        859 _shiftOut:
      0001F1 AD 82            [24]  860 	mov	r5,dpl
      0001F3 AE 83            [24]  861 	mov	r6,dph
      0001F5 AF F0            [24]  862 	mov	r7,b
                           0001F7   863 	C$digi.c$66$2_0$38 ==.
                                    864 ;	./src/modules/digi.c:66: for (uint8_t i = 0; i < 8; i++) {
      0001F7 7C 00            [12]  865 	mov	r4,#0x00
      0001F9                        866 00106$:
      0001F9 BC 08 00         [24]  867 	cjne	r4,#0x08,00123$
      0001FC                        868 00123$:
      0001FC 40 03            [24]  869 	jc	00124$
      0001FE 02r02rC2         [24]  870 	ljmp	00108$
      000201                        871 00124$:
                           000201   872 	C$digi.c$67$3_0$39 ==.
                                    873 ;	./src/modules/digi.c:67: if (bitOrder == LSBFIRST) {
      000201 E5*09            [12]  874 	mov	a,_shiftOut_PARM_3
      000203 70 44            [24]  875 	jnz	00102$
                           000205   876 	C$digi.c$68$4_0$40 ==.
                                    877 ;	./src/modules/digi.c:68: digitalWrite(dataPin, !!(val & (1 << i)));
      000205 8C F0            [24]  878 	mov	b,r4
      000207 05 F0            [12]  879 	inc	b
      000209 7A 01            [12]  880 	mov	r2,#0x01
      00020B 7B 00            [12]  881 	mov	r3,#0x00
      00020D 80 06            [24]  882 	sjmp	00127$
      00020F                        883 00126$:
      00020F EA               [12]  884 	mov	a,r2
      000210 2A               [12]  885 	add	a,r2
      000211 FA               [12]  886 	mov	r2,a
      000212 EB               [12]  887 	mov	a,r3
      000213 33               [12]  888 	rlc	a
      000214 FB               [12]  889 	mov	r3,a
      000215                        890 00127$:
      000215 D5 F0 F7         [24]  891 	djnz	b,00126$
      000218 A8*0A            [24]  892 	mov	r0,_shiftOut_PARM_4
      00021A 79 00            [12]  893 	mov	r1,#0x00
      00021C E8               [12]  894 	mov	a,r0
      00021D 52 02            [12]  895 	anl	ar2,a
      00021F E9               [12]  896 	mov	a,r1
      000220 52 03            [12]  897 	anl	ar3,a
      000222 EA               [12]  898 	mov	a,r2
      000223 4B               [12]  899 	orl	a,r3
      000224 B4 01 00         [24]  900 	cjne	a,#0x01,00128$
      000227                        901 00128$:
      000227 B3               [12]  902 	cpl	c
      000228 92*00            [24]  903 	mov	_shiftOut_sloc0_1_0,c
      00022A E4               [12]  904 	clr	a
      00022B 33               [12]  905 	rlc	a
      00022C F5*00            [12]  906 	mov	_digitalWrite_PARM_2,a
      00022E 8D 82            [24]  907 	mov	dpl,r5
      000230 8E 83            [24]  908 	mov	dph,r6
      000232 8F F0            [24]  909 	mov	b,r7
      000234 C0 07            [24]  910 	push	ar7
      000236 C0 06            [24]  911 	push	ar6
      000238 C0 05            [24]  912 	push	ar5
      00023A C0 04            [24]  913 	push	ar4
      00023C 12r00r01         [24]  914 	lcall	_digitalWrite
      00023F D0 04            [24]  915 	pop	ar4
      000241 D0 05            [24]  916 	pop	ar5
      000243 D0 06            [24]  917 	pop	ar6
      000245 D0 07            [24]  918 	pop	ar7
      000247 80 47            [24]  919 	sjmp	00103$
      000249                        920 00102$:
                           000249   921 	C$digi.c$70$4_0$41 ==.
                                    922 ;	./src/modules/digi.c:70: digitalWrite(dataPin, !!(val & (1 << (7 - i))));
      000249 74 07            [12]  923 	mov	a,#0x07
      00024B C3               [12]  924 	clr	c
      00024C 9C               [12]  925 	subb	a,r4
      00024D FB               [12]  926 	mov	r3,a
      00024E 8B F0            [24]  927 	mov	b,r3
      000250 05 F0            [12]  928 	inc	b
      000252 7B 01            [12]  929 	mov	r3,#0x01
      000254 7A 00            [12]  930 	mov	r2,#0x00
      000256 80 06            [24]  931 	sjmp	00130$
      000258                        932 00129$:
      000258 EB               [12]  933 	mov	a,r3
      000259 2B               [12]  934 	add	a,r3
      00025A FB               [12]  935 	mov	r3,a
      00025B EA               [12]  936 	mov	a,r2
      00025C 33               [12]  937 	rlc	a
      00025D FA               [12]  938 	mov	r2,a
      00025E                        939 00130$:
      00025E D5 F0 F7         [24]  940 	djnz	b,00129$
      000261 A8*0A            [24]  941 	mov	r0,_shiftOut_PARM_4
      000263 79 00            [12]  942 	mov	r1,#0x00
      000265 E8               [12]  943 	mov	a,r0
      000266 52 03            [12]  944 	anl	ar3,a
      000268 E9               [12]  945 	mov	a,r1
      000269 52 02            [12]  946 	anl	ar2,a
      00026B EB               [12]  947 	mov	a,r3
      00026C 4A               [12]  948 	orl	a,r2
      00026D B4 01 00         [24]  949 	cjne	a,#0x01,00131$
      000270                        950 00131$:
      000270 B3               [12]  951 	cpl	c
      000271 92*00            [24]  952 	mov	_shiftOut_sloc0_1_0,c
      000273 E4               [12]  953 	clr	a
      000274 33               [12]  954 	rlc	a
      000275 F5*00            [12]  955 	mov	_digitalWrite_PARM_2,a
      000277 8D 82            [24]  956 	mov	dpl,r5
      000279 8E 83            [24]  957 	mov	dph,r6
      00027B 8F F0            [24]  958 	mov	b,r7
      00027D C0 07            [24]  959 	push	ar7
      00027F C0 06            [24]  960 	push	ar6
      000281 C0 05            [24]  961 	push	ar5
      000283 C0 04            [24]  962 	push	ar4
      000285 12r00r01         [24]  963 	lcall	_digitalWrite
      000288 D0 04            [24]  964 	pop	ar4
      00028A D0 05            [24]  965 	pop	ar5
      00028C D0 06            [24]  966 	pop	ar6
      00028E D0 07            [24]  967 	pop	ar7
      000290                        968 00103$:
                           000290   969 	C$digi.c$72$3_0$39 ==.
                                    970 ;	./src/modules/digi.c:72: digitalWrite(clockPin, HIGH);
      000290 75*00 01         [24]  971 	mov	_digitalWrite_PARM_2,#0x01
      000293 85*06 82         [24]  972 	mov	dpl,_shiftOut_PARM_2
      000296 85*07 83         [24]  973 	mov	dph,(_shiftOut_PARM_2 + 1)
      000299 85*08 F0         [24]  974 	mov	b,(_shiftOut_PARM_2 + 2)
      00029C C0 07            [24]  975 	push	ar7
      00029E C0 06            [24]  976 	push	ar6
      0002A0 C0 05            [24]  977 	push	ar5
      0002A2 C0 04            [24]  978 	push	ar4
      0002A4 12r00r01         [24]  979 	lcall	_digitalWrite
                           0002A7   980 	C$digi.c$73$3_0$39 ==.
                                    981 ;	./src/modules/digi.c:73: digitalWrite(clockPin, LOW);
      0002A7 75*00 00         [24]  982 	mov	_digitalWrite_PARM_2,#0x00
      0002AA 85*06 82         [24]  983 	mov	dpl,_shiftOut_PARM_2
      0002AD 85*07 83         [24]  984 	mov	dph,(_shiftOut_PARM_2 + 1)
      0002B0 85*08 F0         [24]  985 	mov	b,(_shiftOut_PARM_2 + 2)
      0002B3 12r00r01         [24]  986 	lcall	_digitalWrite
      0002B6 D0 04            [24]  987 	pop	ar4
      0002B8 D0 05            [24]  988 	pop	ar5
      0002BA D0 06            [24]  989 	pop	ar6
      0002BC D0 07            [24]  990 	pop	ar7
                           0002BE   991 	C$digi.c$66$2_0$38 ==.
                                    992 ;	./src/modules/digi.c:66: for (uint8_t i = 0; i < 8; i++) {
      0002BE 0C               [12]  993 	inc	r4
      0002BF 02r01rF9         [24]  994 	ljmp	00106$
      0002C2                        995 00108$:
                           0002C2   996 	C$digi.c$75$2_0$38 ==.
                                    997 ;	./src/modules/digi.c:75: }
                           0002C2   998 	C$digi.c$75$2_0$38 ==.
                           0002C2   999 	XG$shiftOut$0$0 ==.
      0002C2 22               [24] 1000 	ret
                                   1001 	.area CSEG    (CODE)
                                   1002 	.area CONST   (CODE)
                                   1003 	.area XINIT   (CODE)
                                   1004 	.area CABS    (ABS,CODE)
